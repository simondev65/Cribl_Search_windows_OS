{"created":1758783282691,"modified":1759244823646,"createdBy":"oidc|CriblCorpOkta|00uqbwsz1bzTYiOhK4x7","modifiedBy":"oidc|CriblCorpOkta|00uqbwsz1bzTYiOhK4x7","displayCreatedBy":" ","displayModifiedBy":" ","schedule":{"enabled":false,"cronSchedule":"0 0 * * *","tz":"UTC","keepLastN":2},"groups":{},"name":"Windows Security - Suspicious activity","description":"view potential threats","elements":[{"config":{"defaultValue":{"earliest":"-10m","latest":"now","timezone":"local"}},"id":"4bs15znxn","inputId":"time","type":"input.timerange","layout":{"x":0,"y":0,"w":2,"h":2},"variant":"input","title":"time"},{"config":{"defaultValue":"true","field":"host"},"search":{"type":"inline","query":"${search_windows_assets}|project host|extend host=strcat('host==\\\"',host,'\\\"')","earliest":"-10m","latest":"now"},"id":"njverwhpg","inputId":"host","type":"input.dropdown","layout":{"x":2,"y":0,"w":2,"h":2},"variant":"input","title":"host"},{"config":{},"search":{"type":"inline","query":"${pack(Cribl-Search-windows-OS).windows_log_dataset}| where ${suspicious_message} or ${suspicious_EventID}","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"vxj6gcvpz","layout":{"x":0,"y":0,"w":4,"h":2},"type":"list.events","title":"Potential suspiscious activity","hidePanel":true},{"config":{"customData":{"stack":true,"seriesCount":4},"onClickAction":{"type":"Open external link","selectedLinkId":"$environment.baseUrl$/search/p/Cribl-Search-windows-OS/dashboards/bmp8tz2j1?token=${pack(Cribl-Search-windows-OS).windows_log_dataset}  host=$field.name$ "}},"search":{"type":"inline","query":"|where $host|timestats count() by host","earliest":"-10m","latest":"now","parentSearchId":"vxj6gcvpz"},"id":"uisbz18l9","layout":{"x":0,"y":0,"w":6,"h":4},"type":"chart.column","title":"activity by host (Click)"},{"config":{"customData":{"stack":true,"seriesCount":5},"onClickAction":{"type":"Open external link","selectedLinkId":"$environment.baseUrl$/search/p/Cribl-Search-windows-OS/dashboards/bmp8tz2j1?token=${pack(Cribl-Search-windows-OS).windows_log_dataset}  EventID=$field.name$ |where $host ","search":"${pack(Cribl-Search-windows-OS).windows_dataset}  EventID=$field.name$ earliest=$earliest$ latest=$latest$|where $host "}},"search":{"type":"inline","query":"|where $host|timestats count() by EventID","earliest":"-10m","latest":"now","parentSearchId":"vxj6gcvpz"},"id":"nt1ohfrrp","layout":{"x":6,"y":0,"w":6,"h":4},"type":"chart.column","title":"activity by EventID (Click)"},{"config":{"onClickAction":{"type":"Open external link","selectedLinkId":"$environment.baseUrl$/search/p/Cribl-Search-windows-OS/dashboards/y7auzyr22/"}},"search":{"type":"inline","earliest":"-10m","latest":"now","parentSearchId":"vxj6gcvpz","query":"|where $host|summarize count() by EventID|lookup pack(Cribl-Search-windows-OS).EventID  on EventID |project EventID, Mitre*|render table\n\n "},"id":"zjg8f9l5g","layout":{"x":0,"y":4,"w":6,"h":2},"type":"list.table","title":"Aligning EventID with Mitre ATT&CK (click)"},{"config":{"onClickAction":{"type":"Run a new search","search":"${pack(Cribl-Search-windows-OS).windows_dataset}  EventID=$rowData.EventID$ earliest=$earliest$ latest=$latest$ host=$rowData.host$ "}},"search":{"type":"inline","query":"|where $host|project host, EventID, Message|render table","earliest":"-10m","latest":"now","parentSearchId":"vxj6gcvpz"},"id":"flmvefru3","layout":{"x":6,"y":4,"w":6,"h":2},"type":"list.table","title":"related events"},{"config":{"label":"click for detail","onClickAction":{"type":"Run a new search","selectedLinkId":"$environment.baseUrl$/search/p/Cribl-Search-windows-OS/dashboards/y7auzyr22/detection=suspicious_lsass","search":"${pack(Cribl-Search-windows-OS).windows_dataset} earliest=$earliest$ latest=$latest$| where EventID == 7045 // \"A service was installed in the system\"\n\n| where ServiceName matches regex @\"PSEXESVC|RemCom\" or ImagePath contains \"%SystemRoot%\\\\TEMP\"\n| project TimeGenerated, Computer, ServiceName, ImagePath, Account\n| order by TimeGenerated desc"}},"search":{"type":"inline","query":"${pack(Cribl-Search-windows-OS).windows_log_dataset}| where EventID == 7045 // \"A service was installed in the system\"\n\n| where ServiceName matches regex @\"PSEXESVC|RemCom\" or ImagePath contains \"%SystemRoot%\\\\TEMP\"\n| project TimeGenerated, Computer, ServiceName, ImagePath, Account\n| order by TimeGenerated desc|count","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"ucczawmxs","layout":{"x":0,"y":6,"w":3,"h":2},"type":"counter.single","title":"Lateral Movement with PSExec"},{"config":{"onClickAction":{"type":"Run a new search","search":"${pack(Cribl-Search-windows-OS).windows_process_dataset} earliest=$earliest$ latest=$latest$| where TargetProcessFileName =~ \"lsass.exe\"\n// Exclude legitimate processes that commonly access LSASS\n| where not(InitiatingProcessFileName in~ (\"wininit.exe\", \"services.exe\", \"smss.exe\", \"svchost.exe\"))\n// Procdump is a common tool for this, but also look for others\n| where InitiatingProcessFileName !~ \"procdump.exe\" or InitiatingProcessCommandLine has_any (\"-ma\", \"-accepteula\")\n| project TimeGenerated, DeviceName, InitiatingProcessFileName, InitiatingProcessCommandLine, TargetProcessFileName\n| order by TimeGenerated desc"},"label":"click for detail"},"search":{"type":"inline","query":"${pack(Cribl-Search-windows-OS).windows_process_dataset}| where TargetProcessFileName =~ \"lsass.exe\"\n// Exclude legitimate processes that commonly access LSASS\n| where not(InitiatingProcessFileName in~ (\"wininit.exe\", \"services.exe\", \"smss.exe\", \"svchost.exe\"))\n// Procdump is a common tool for this, but also look for others\n| where InitiatingProcessFileName !~ \"procdump.exe\" or InitiatingProcessCommandLine has_any (\"-ma\", \"-accepteula\")\n| project TimeGenerated, DeviceName, InitiatingProcessFileName, InitiatingProcessCommandLine, TargetProcessFileName\n| order by TimeGenerated desc|count","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"0stdzloxa","layout":{"x":3,"y":6,"w":3,"h":2},"type":"counter.single","title":"Credential Dumping: LSASS Memory Access"},{"config":{"onClickAction":{"type":"Run a new search","search":"${pack(Cribl-Search-windows-OS).windows_process_dataset} earliest=$earliest$ latest=$latest$| where FileName in (\"powershell.exe\", \"pwsh.exe\")\n| where ProcessCommandLine has_any(\n    \"Set-MpPreference -DisableRealtimeMonitoring $true\",\n    \"Add-MpPreference -ExclusionPath\",\n    \"netsh advfirewall set allprofiles state off\" // Also look for disabling the firewall\n)\n| project TimeGenerated, DeviceName, FileName, ProcessCommandLine, InitiatingProcessFileName\n| order by TimeGenerated desc"},"label":"click for detail"},"search":{"type":"inline","query":"${pack(Cribl-Search-windows-OS).windows_process_dataset}| where FileName in (\"powershell.exe\", \"pwsh.exe\")\n| where ProcessCommandLine has_any(\n    \"Set-MpPreference -DisableRealtimeMonitoring\",\n    \"Add-MpPreference -ExclusionPath\",\n    \"netsh advfirewall set allprofiles state off\" // Also look for disabling the firewall\n)\n| project TimeGenerated, DeviceName, FileName, ProcessCommandLine, InitiatingProcessFileName\n| order by TimeGenerated desc|count","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"shyvpyzq0","layout":{"x":6,"y":6,"w":2,"h":2},"type":"counter.single","title":"Disabling Security Tools (Defense Evasion)"},{"config":{"onClickAction":{"type":"Run a new search","selectedLinkId":"| where ProcessCommandLine has_any (\"-encoded\", \"-enc\", \"IEX\", \"DownloadString\", \"FromBase64String\")   and (ProcessCommandLine has \"-nop\" or ProcessCommandLine has \"-noni\") // -NoProfile and -NonInteractive flags are common in attacks | where FileName =~ \"powershell.exe\" or FileName =~ \"pwsh.exe\" | project TimeGenerated, DeviceName, AccountName, FileName, ProcessCommandLine, InitiatingProcessFileName | order by TimeGenerated desc","search":"${pack(Cribl-Search-windows-OS).windows_process_dataset} earliest=$earliest$ latest=$latest$| where ProcessCommandLine has_any (\"-encoded\", \"-enc\", \"IEX\", \"DownloadString\", \"FromBase64String\")\n  and (ProcessCommandLine has \"-nop\" or ProcessCommandLine has \"-noni\") // -NoProfile and -NonInteractive flags are common in attacks\n| where FileName =~ \"powershell.exe\" or FileName =~ \"pwsh.exe\"\n| project TimeGenerated, DeviceName, AccountName, FileName, ProcessCommandLine, InitiatingProcessFileName\n| order by TimeGenerated desc"},"label":"click for detail"},"search":{"type":"inline","query":"${pack(Cribl-Search-windows-OS).windows_process_dataset}| where ProcessCommandLine has_any (\"-encoded\", \"-enc\", \"IEX\", \"DownloadString\", \"FromBase64String\")\n  and (ProcessCommandLine has \"-nop\" or ProcessCommandLine has \"-noni\") // -NoProfile and -NonInteractive flags are common in attacks\n| where FileName =~ \"powershell.exe\" or FileName =~ \"pwsh.exe\"\n| project TimeGenerated, DeviceName, AccountName, FileName, ProcessCommandLine, InitiatingProcessFileName\n| order by TimeGenerated desc|count","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"qvo5dlhzf","layout":{"x":8,"y":6,"w":2,"h":2},"type":"counter.single","title":"Suspicious PowerShell Execution"},{"config":{"label":"click for detail","onClickAction":{"type":"Run a new search","search":"${pack(Cribl-Search-windows-OS).windows_process_dataset} earliest=$earliest$ latest=$latest$| where FileName =~ \"schtasks.exe\"\n| where ProcessCommandLine has \"/create\" and ProcessCommandLine has \"/sc\"\n// Look for tasks that run from suspicious locations or are obfuscated\n| where ProcessCommandLine has_any(\"C:\\\\Users\\\\Public\", \"C:\\\\Temp\", \"AppData\\\\Local\\\\Temp\", \"powershell -enc\")\n| project TimeGenerated, DeviceName, AccountName, ProcessCommandLine\n| order by TimeGenerated desc"}},"search":{"type":"inline","query":"${pack(Cribl-Search-windows-OS).windows_process_dataset} | where FileName =~ \"schtasks.exe\"\n| where ProcessCommandLine has \"/create\" and ProcessCommandLine has \"/sc\"\n// Look for tasks that run from suspicious locations or are obfuscated\n| where ProcessCommandLine has_any(\"C:\\\\Users\\\\Public\", \"C:\\\\Temp\", \"AppData\\\\Local\\\\Temp\", \"powershell -enc\")\n| project TimeGenerated, DeviceName, AccountName, ProcessCommandLine\n| order by TimeGenerated desc|count","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"sp30zg07u","layout":{"x":10,"y":6,"w":2,"h":2},"type":"counter.single","title":"Persistence via Scheduled Tasks"},{"config":{"markdown":"# Why those detections matter\n---\nNote : create a [scheduled search](https://docs.cribl.io/search/scheduled-searches/) out of them with an alert. \n\n## Lateral Movement with PsExec-like Tools\nAttackers often use tools like PsExec to execute commands on remote machines for lateral movement (MITRE ATT&CK T1569.002). PsExec works by creating a temporary service on the target machine. This query detects the pattern of a service being created and started remotely.\nThis query looks for the creation of services with names commonly used by PsExec (PSEXESVC) or other remote admin tools. An executable running from a temporary directory is also highly suspicious and characteristic of this technique.\n\n---\n\n## Credential Dumping: LSASS Memory Access\nAttackers frequently try to dump credentials from the Local Security Authority Subsystem Service (LSASS) process. This is a classic credential access technique (MITRE ATT&CK T1003.001). Legitimate processes rarely need to access LSASS memory, making this a high-confidence alert.\nThis query hunts for processes accessing lsass.exe, excluding known legitimate system processes.\nWhat it detects: This query identifies suspicious processes, such as mimikatz.exe or even a renamed procdump.exe, that are attempting to read the memory of lsass.exe to extract passwords, hashes, and Kerberos tickets.\n\n---\n\n## Disabling Security Tools (Defense Evasion)\nBefore deploying their main payload, attackers often try to disable security software like Microsoft Defender (MITRE ATT&CK T1562.001). This is a strong indicator that subsequent activity is malicious.\n\nThis query looks for PowerShell commands used to tamper with Microsoft Defender settings.\nWhat it detects: This query finds explicit commands to disable real-time protection, add exclusions for malicious files, or turn off the Windows Firewall. These actions are almost never performed for legitimate administrative reasons during normal operations.\n\n---\n\n## Suspicious PowerShell Execution\nPowerShell is a primary tool for attackers due to its power and native presence on Windows systems (MITRE ATT&CK T1059.001). This query looks for common suspicious patterns like encoded commands, non-interactive sessions, and download cradles, which are hallmarks of \"fileless\" attacks.\nWhat it detects: This helps you spot attackers using PowerShell to execute malicious code directly in memory. The $EncodedCommand$ (-enc) flag is frequently used to obfuscate commands, while IEX (Invoke-Expression) and DownloadString are used to download and run scripts from the internet. 🕵️‍♂️\n\n---\n\n## Persistence via Scheduled Tasks\nScheduled tasks are a classic method for attackers to maintain persistence on a machine (MITRE ATT&CK T1053.005). They use the Windows Task Scheduler to run their malicious code automatically at system startup or on a schedule.\nThis query hunts for the creation of scheduled tasks using the native schtasks.exe utility with suspicious parameters.\nWhat it detects: This flags the creation of scheduled tasks that are set to execute a program from a non-standard, user-writable directory like Temp or Public, or that launch an obfuscated PowerShell command. This is a very common technique used by malware and APT groups.\n\n---\n\n## Event ID : why are they important\nsee below\n\n---\n\n\n"},"id":"64l5fwuoj","layout":{"x":0,"y":8,"w":12,"h":5},"variant":"markdown","type":"markdown.default"},{"config":{"showRowNumbers":false},"search":{"type":"inline","query":"dataset=\"$vt_lookups\" lookupFile=\"EventID\"\n|where Mitre_attack_id!=\"\"|project-away _time, look*, dataset, desc*, Log*","earliest":"-10m","latest":"now"},"id":"niis0gy0s","layout":{"x":0,"y":13,"w":12,"h":4},"type":"list.table","title":"EventID et Mitre ATT&Ck"}],"cacheTTLSeconds":300}